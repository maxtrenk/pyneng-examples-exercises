# -*- coding: utf-8 -*-
"""
Задание 12.2


Функция ping_ip_addresses из задания 12.1 принимает только список адресов,
но было бы удобно иметь возможность указывать адреса с помощью диапазона, например, 192.168.100.1-10.

В этом задании необходимо создать функцию convert_ranges_to_ip_list,
которая конвертирует список IP-адресов в разных форматах в список, где каждый IP-адрес указан отдельно.

Функция ожидает как аргумент список IP-адресов и/или диапазонов IP-адресов.

Элементы списка могут быть в формате:
* 10.1.1.1
* 10.1.1.1-10.1.1.10
* 10.1.1.1-10

Если адрес указан в виде диапазона, надо развернуть диапазон в отдельные адреса, включая последний адрес диапазона.
Для упрощения задачи, можно считать, что в диапазоне всегда меняется только последний октет адреса.

Функция возвращает список IP-адресов.


Например, если передать функции convert_ranges_to_ip_list такой список:
['8.8.4.4', '1.1.1.1-3', '172.21.41.128-172.21.41.132']

Функция должна вернуть такой список:
['8.8.4.4', '1.1.1.1', '1.1.1.2', '1.1.1.3', '172.21.41.128',
 '172.21.41.129', '172.21.41.130', '172.21.41.131', '172.21.41.132']

"""
def convert_ranges_to_ip_list(ip_diapozon):
    vse_ip = []
    for i in ip_diapozon:
        razrez = i.split('.')
        if '-' not in i:
            vse_ip.append(i)
        else:
            nacalo = razrez[3]
            nacalo = nacalo.split('-')
            nacalo = int(nacalo[0])
            if '-' in razrez[-1]:
                conec = razrez[-1].split('-')
                while nacalo <= int(conec[-1]):
                    vse_ip.append(f'{razrez[0]}.{razrez[1]}.{razrez[2]}.{str(nacalo)}')
                    nacalo += 1
            else:
                while nacalo <= int(razrez[-1]):
                    vse_ip.append(f'{razrez[0]}.{razrez[1]}.{razrez[2]}.{str(nacalo)}')
                    nacalo += 1
    print(vse_ip)
    return vse_ip





list_of_ips = ["10.1.1.1", "10.4.10.10-13", "192.168.1.12-192.168.1.15"]
convert_ranges_to_ip_list(list_of_ips)